version: 2.1
description: Orb for produktteam oppfÃ¸lging

orbs:
  pus:
    executors:

      pus-pipeline:
        docker:
          - image: navikt/pus-pipeline

    commands:

      oppdater_mvn_cache:
        steps:
          - run:
              name: Last ned settings.xml
              command: |
                curl -o settings.xml -L -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3.raw" "api.github.com/repos/navikt/pus-pipeline/contents/settings.xml"
          - restore_cache:
              keys:
                - v1-dependencies-{{ .Branch }}-{{ checksum "pom.xml" }}-{{ checksum "settings.xml" }}
          - run: mvn -B -s settings.xml -P circleci dependency:go-offline
          - save_cache:
              paths:
                - ~/.m2
              key: v1-dependencies-{{ .Branch }}-{{ checksum "pom.xml" }}-{{ checksum "settings.xml" }}

      oppdater_npm_cache:
        steps:
          - restore_cache:
              key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          - run: npm ci
          - save_cache:
              key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
              paths:
                - /root/.npm

      bygg-og-push-docker-image:
        steps:
          - sett-versjon-og-tag-repo
          - setup_remote_docker
          - run:
              name: Bygg docker image
              command: |
                docker build -t navikt/$CIRCLE_PROJECT_REPONAME .
                docker tag navikt/$CIRCLE_PROJECT_REPONAME navikt/$CIRCLE_PROJECT_REPONAME:$VERSION
          - run:
              name: Push docker image
              command: |
                echo $DOCKER_PASSWORD | docker login --username $DOCKER_LOGIN --password-stdin
                docker push navikt/$CIRCLE_PROJECT_REPONAME
                echo "Pushet versjon $VERSION av $CIRCLE_PROJECT_REPONAME"
                echo "https://cloud.docker.com/u/navikt/repository/docker/navikt/$CIRCLE_PROJECT_REPONAME"

      sett-versjon-og-tag-repo:
        steps:
          - run: mkdir -p workspace
          - run:
              name: Sett versjon
              command: echo "export VERSION=$(git rev-list --count HEAD).$(date +'%Y%m%d.%H%M')" >> $BASH_ENV
          - run: echo $VERSION > workspace/version
          - persist_to_workspace:
              root: workspace
              paths:
                - version
          - run:
              name: Tag git repo
              command: node /tag-repo.js $CIRCLE_PROJECT_REPONAME $VERSION

      bygg-frontend:
        steps:
          - checkout
          - oppdater_npm_cache
          - run: npm run lint
          - run: npm run test
          - run: npm run build

      bygg-backend:
        steps:
          - checkout
          - oppdater_mvn_cache
          - run: mvn -s settings.xml -P circleci -B package
          - store_test_results:
              path: target/surefire-reports

      deploy:
        parameters:
          cluster:
            type: string
            description: cluster det skal deployes til (dev-fss, dev-sbs, prod-sbs eller prod-fss)
          filepath:
            type: string
            description: filsti til nais-config (f.eks. `/.nais-q.yaml`)
            default: ./nais-q.yaml
        steps:
          - attach_workspace:
              at: /tmp/workspace
          - checkout
          - run:
              name: Deploy app
              command: |
                echo FOO
                echo $(ls /tmp/workspace/)

    jobs:

      test-backend:
        executor: pus-pipeline
        steps:
          - checkout
          - oppdater_mvn_cache
          - run: mvn -B -s settings.xml -P circleci verify
          - store_test_results:
              path: target/surefire-reports

      test-frontend:
        executor: pus-pipeline
        steps:
          - checkout
          - oppdater_npm_cache
          - run: npm run lint
          - run: npm run test

      deploy-frontend:
        executor: pus-pipeline
        parameters:
          cluster:
            type: string
            description: cluster det skal deployes til (dev-fss, dev-sbs, prod-sbs eller prod-fss)
          filepath:
            type: string
            description: filsti til nais-config (f.eks. `/.nais-q.yaml`)
            default: ./nais-q.yaml
        steps:
          - add_ssh_keys
          - bygg-frontend
          - bygg-og-push-docker-image
          - deploy:
              cluster: <<parameters.cluster>>
              filepath: <<parameters.filepath>>

      deploy-backend:
        executor: pus-pipeline
        parameters:
          cluster:
            type: string
            description: cluster det skal deployes til (dev-fss, dev-sbs, prod-sbs eller prod-fss)
          filepath:
            type: string
            description: filsti til nais-config (f.eks. `/.nais-q.yaml`)
            default: ./nais-q.yaml
        steps:
          - bygg-backend
          - bygg-og-push-docker-image
          - deploy:
              cluster: <<parameters.cluster>>
              filepath: <<parameters.filepath>>

      deploy-backend-med-frontend:
        executor: pus-pipeline
        parameters:
          cluster:
            type: string
            description: cluster det skal deployes til (dev-fss, dev-sbs, prod-sbs eller prod-fss)
          filepath:
            type: string
            description: filsti til nais-config (f.eks. `/.nais-q.yaml`)
            default: ./nais-q.yaml
        steps:
          - bygg-frontend
          - bygg-backend
          - bygg-og-push-docker-image
          - deploy:
              cluster: <<parameters.cluster>>
              filepath: <<parameters.filepath>>

      deploy:
        executor: pus-pipeline
        parameters:
          cluster:
            type: string
            description: cluster det skal deployes til (dev-fss, dev-sbs, prod-sbs eller prod-fss)
          filepath:
            type: string
            description: filsti til nais-config (f.eks. `/.nais-q.yaml`)
            default: ./nais-q.yaml
        steps:
          - deploy:
              cluster: <<parameters.cluster>>
              filepath: <<parameters.filepath>>

workflows:
  version: 2
  commit:
    jobs:
      - pus/test-backend:
          context: pus
          filters:
            branches:
              ignore: master
      - pus/deploy-backend:
          cluster: dev-fss
          filepath: ./nais-q-fss.yaml
          context: pus
          filters:
            branches:
              only: master
      - pus/deploy:
          requires:
            - pus/deploy-backend
          cluster: dev-sbs
          filepath: ./nais-q-sbs.yaml
          filters:
            branches:
              only: master
